{"version":3,"sources":["context/context.js","components/alert/Alert.js","components/form/Form.js","components/list/List.js","App.js","index.js"],"names":["AppContext","createContext","useGlobalContext","useContext","AppProvider","children","useState","todo","setTodo","localStorage","getItem","JSON","parse","list","setList","isEditing","setIsEditing","editID","setEditID","show","msg","type","alert","setAlert","showAlert","useEffect","setItem","stringify","Provider","value","handleSubmit","e","preventDefault","map","item","id","title","newItem","Date","getTime","toString","clearList","removeItem","filter","editItem","specificItem","find","Alert","timeout","setTimeout","clearTimeout","className","Form","onSubmit","placeholder","onChange","target","length","onClick","React","memo","List","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc4e1d9c.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\n//? Get List From LocalStorage\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"list\")));\n  } else {\n    return [];\n  }\n};\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  //? States\n  const [todo, setTodo] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\n  //? Handlers\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!todo) {\n      showAlert(true, \"danger\", \"please enter value\");\n    } else if (todo && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: todo };\n          }\n          return item;\n        })\n      );\n      setTodo(\"\");\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, \"success\", \"value changed\");\n    } else {\n      showAlert(true, \"success\", \"item added to the list\");\n      const newItem = { id: new Date().getTime().toString(), title: todo };\n\n      setList([...list, newItem]);\n      setTodo(\"\");\n    }\n  };\n\n  //? Alert Function\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n\n  const clearList = () => {\n    showAlert(true, \"danger\", \"empty list\");\n    setList([]);\n  };\n  const removeItem = (id) => {\n    showAlert(true, \"danger\", \"item removed\");\n    setList(list.filter((item) => item.id !== id));\n  };\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setTodo(specificItem.title);\n  };\n\n  //? Set List on LocalStorage\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        handleSubmit,\n        todo,\n        setTodo,\n        isEditing,\n        list,\n        clearList,\n        removeItem,\n        editItem,\n        alert,\n        showAlert,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n//? Costum Hook\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport default AppProvider;\n","import React, { useEffect } from \"react\";\nimport { useGlobalContext } from \"../../context/context\";\n\nimport \"./alert.scss\";\n\nconst Alert = () => {\n  const { alert, showAlert, list } = useGlobalContext();\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      showAlert();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [list, showAlert]);\n\n  return <p className={`alert alert-${alert.type}`}>{alert.msg}</p>;\n};\n\nexport default Alert;\n","import React from \"react\";\nimport { useGlobalContext } from \"../../context/context\";\nimport Alert from \"../alert/Alert\";\n\nimport \"./form.scss\";\n\nconst Form = ({ children }) => {\n  const {\n    handleSubmit,\n    todo,\n    setTodo,\n    isEditing,\n    list,\n    clearList,\n    alert,\n  } = useGlobalContext();\n\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <div className='form__alert'>{alert.show && <Alert />}</div>\n\n      <h2 className='form__title'>Todo App</h2>\n      <div className='form__control'>\n        <input\n          type='text'\n          className='form__input'\n          placeholder='...'\n          value={todo}\n          onChange={(e) => setTodo(e.target.value)}\n        />\n        <button type='submit' className='form__btn'>\n          {isEditing ? \"Edit\" : \"Add\"}\n        </button>\n      </div>\n      {children}\n      {list.length > 1 && (\n        <button className='form__clear' onClick={clearList}>\n          Clear Items\n        </button>\n      )}\n    </form>\n  );\n};\n\nexport default React.memo(Form);\n","import React from \"react\";\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\nimport { useGlobalContext } from \"../../context/context\";\n\nimport \"./list.scss\";\nconst List = () => {\n  const { list, removeItem, editItem } = useGlobalContext();\n\n  return (\n    <div className='list'>\n      {list.length > 0 &&\n        list.map(({ id, title }) => {\n          return (\n            <article className='list__item' key={id}>\n              <p className='list__tilte'>{title}</p>\n              <div className='list__btn-container'>\n                <button\n                  className='btn-edit'\n                  type='button'\n                  onClick={() => editItem(id)}\n                >\n                  <FaEdit className='icon edit' />\n                </button>\n                <button\n                  className='btn-delete'\n                  type='button'\n                  onClick={() => removeItem(id)}\n                >\n                  <FaTrash className='icon delete' />\n                </button>\n              </div>\n            </article>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\nimport \"./App.scss\";\nimport Form from \"./components/form/Form\";\nimport List from \"./components/list/List\";\n\nconst App = () => {\n  return (\n    <Form>\n      <List />\n    </Form>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport AppProvider from \"./context/context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}